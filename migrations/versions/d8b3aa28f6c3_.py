"""empty message

Revision ID: d8b3aa28f6c3
Revises: 
Create Date: 2022-02-10 12:49:16.117906

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = 'd8b3aa28f6c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('department',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name_of_department', sa.String(length=100), nullable=False),
                    sa.Column('name_of_faculty', sa.String(length=100), nullable=False),
                    sa.Column('code', sa.String(length=100), nullable=True),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('grading_system',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name_of_schema', sa.String(length=100), nullable=False),
                    sa.Column('option', sqlalchemy_utils.types.choice.ChoiceType(
                        [('PT', 'Practical Test'), ('EX', 'Examination'), ('TT', 'Total')]), nullable=False),
                    sa.Column('total_marks', sa.Float(), nullable=False),
                    sa.Column('criteria', sqlalchemy_utils.types.choice.ChoiceType(
                        [('<=', 'Less Than Or Equal To'), ('>=', 'Greater Than Or Equal To'), ('>', 'Greater Than'),
                         ('<', 'Less Than'), ('==', 'Equal To')]), nullable=True),
                    sa.Column('percentage', sa.Float(), nullable=True),
                    sa.Column('from_score', sa.Float(), nullable=True),
                    sa.Column('to_score', sa.Float(), nullable=True),
                    sa.Column('grade_point', sa.Float(), nullable=True),
                    sa.Column('grade', sqlalchemy_utils.types.choice.ChoiceType(
                        [('NC', 'Not Competent'), ('CD', 'Competent With Distinction'), ('C', 'Competent'),
                         ('CM', 'Competent With Merit')]), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('semester',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name_of_academic_year', sa.String(length=100), nullable=False),
                    sa.Column('name_of_semester', sa.String(length=100), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=50), nullable=False),
                    sa.Column('password', sa.String(length=200), nullable=False),
                    sa.Column('email_address', sa.String(length=50), nullable=True),
                    sa.Column('phone_number', sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20),
                              nullable=True),
                    sa.Column('img', sa.String(length=100), nullable=True),
                    sa.Column('last_logged_in', sa.DateTime(), nullable=True),
                    sa.Column('role', sa.Enum('ADMIN', 'EXAMINATION OFFICER', 'SECRETARY', name='role'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('programme',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('category', sa.Enum('DIPLOMA', 'MASTERS', 'PHD', 'DEGREE0', name='category'),
                              nullable=False),
                    sa.Column('duration', sa.Integer(), nullable=True),
                    sa.Column('department_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('course',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=100), nullable=False),
                    sa.Column('abbr', sa.String(length=100), nullable=False),
                    sa.Column('code', sa.String(length=100), nullable=False),
                    sa.Column('course_type', sa.Enum('Elective', 'Core', name='course_type'), nullable=False),
                    sa.Column('credit_hours', sa.Integer(), nullable=False),
                    sa.Column('programme_id', sa.Integer(), nullable=False),
                    sa.Column('semester_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['programme_id'], ['programme.id'], ondelete='cascade'),
                    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('student',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('matric_no', sa.String(length=50), nullable=False),
                    sa.Column('first_name', sa.String(length=50), nullable=False),
                    sa.Column('last_name', sa.String(length=50), nullable=False),
                    sa.Column('middle_name', sa.String(length=50), nullable=False),
                    sa.Column('gender', sa.Enum('Male', 'Female', 'Others', name='gender'), nullable=False),
                    sa.Column('programme_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['programme_id'], ['programme.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('student_result',
                    sa.Column('created', sa.DateTime(), nullable=False),
                    sa.Column('updated', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('student_id', sa.Integer(), nullable=False),
                    sa.Column('option', sa.Enum('MAIN', 'RESIT', 'RETAKE', name='option'), nullable=True),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.Column('mid_sem', sa.Float(), nullable=False),
                    sa.Column('prac_test1', sa.Float(), nullable=False),
                    sa.Column('prac_test2', sa.Float(), nullable=False),
                    sa.Column('end_of_sem', sa.Float(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='cascade'),
                    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_result')
    op.drop_table('student')
    op.drop_table('course')
    op.drop_table('programme')
    op.drop_table('user')
    op.drop_table('semester')
    op.drop_table('grading_system')
    op.drop_table('department')
    # ### end Alembic commands ###
